name: Build and Release

on:
  push:
    #    branches: [master]
    tags:
      - 'v*'
    paths-ignore:
      - "**.md"
      - "**.spec.js"
      - ".idea"
      - ".vscode"
      - ".dockerignore"
      - "Dockerfile"
      - ".gitignore"
      - ".github/**"
      - "!.github/workflows/release.yml"

jobs:
  build:
    runs-on: ${{ matrix.os }}
    permissions:
      contents: read
      packages: write
      id-token: write

    strategy:
      matrix:
        os: [windows-latest]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 20
          cache: npm

      #      - name: Cache node modules
      #        id: node_modules_cache_id
      #        uses: actions/cache@v3
      #        env:
      #          cache-name: cache-node-modules
      #        with:
      #          # npm cache files are stored in `~/.npm` on Linux/macOS
      #          path: node_modules
      #          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
      #

      #      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
      #        name: List the state of node modules
      #        continue-on-error: true
      #        run: npm list

      - name: Install Dependencies
        if: ${{ steps.node_modules_cache_id.outputs.cache-hit != 'true' }}
        run: npm ci

      - name: Build Release Files
        run: npm run build
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      #      - name: Upload Artifact
      #        uses: actions/upload-artifact@v3
      #        with:
      #          # name: release_on_${{ matrix. os }}
      #          name: release_on_windows
      #          path: release/
      #          retention-days: 5
      #
      #      - name: zip
      #        uses: vimtor/action-zip@v1
      #        with:
      #          files: release/win-unpacked
      #          dest: release/win-packed.zip

      - name: Publish Release Files
        run: npm run publish
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

#      - name: Create Release
#        uses: softprops/action-gh-release@v1
#        if: startsWith(github.ref, 'refs/tags/v')
#        with:
#          draft: true
#          files: |
#            release/*
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}